# ðŸ“„ DocUGen â€“ Socle de gÃ©nÃ©ration de documents multi-formats

**DocUGen** est un socle modulaire Java conÃ§u pour gÃ©nÃ©rer des documents dans divers formats (PDF, XLSX, CSV, JSON), intÃ©grer des codes-barres, et produire des fichiers complexes via les bibliothÃ¨ques les plus puissantes comme **iText**, **Apache POI**, **Jackson**, **Aspose**, et **ZXing**.

---

## ðŸ§± Architecture du projet


DocumentGenerator/
â”‚
â”œâ”€â”€ core/                   # Module commun (interfaces, utilitaires, etc.)
â”‚   â””â”€â”€ src/main/java/...
â”‚
â”œâ”€â”€ pdf-generator/          # Module gÃ©nÃ©ration PDF avec iText
â”‚   â””â”€â”€ src/main/java/...
â”‚
â”œâ”€â”€ xlsx-generator/         # Module gÃ©nÃ©ration XLSX avec Apache POI
â”‚   â””â”€â”€ src/main/java/...
â”‚
â”œâ”€â”€ csv-generator/          # Module gÃ©nÃ©ration CSV (utilitaire Java natif)
â”‚   â””â”€â”€ src/main/java/...
â”‚
â”œâ”€â”€ json-generator/         # Module gÃ©nÃ©ration JSON avec Jackson ou Gson
â”‚   â””â”€â”€ src/main/java/...
â”‚
â””â”€â”€ app/                    # Module application / exemple dâ€™utilisation
    â””â”€â”€ src/main/java/...


## ðŸ§© DÃ©pendances par module

### ðŸ“„ `pdf-generator`
```gradle
implementation 'com.itextpdf:itext7-core:7.2.

### ðŸ“„ `xlsx-generator`
```gradle
implementation 'org.apache.poi:poi-ooxml:5.2.3'

### ðŸ“„ `json-generator`
```gradle
implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'


https://developer.android.com/develop/ui/compose/tutorial?hl=fr
